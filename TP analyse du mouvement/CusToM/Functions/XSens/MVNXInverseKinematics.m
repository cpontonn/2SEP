function MVNXInverseKinematics(filename, AnalysisParameters)
% Recovery of joint coordinates in a MVNX file
%
%   INPUT
%   - filename: name of the file to process (character string)
%   - AnalysisParameters: parameters of the musculoskeletal analysis,
%   automatically generated by the graphic interface 'Analysis' 
%   OUTPUT
%   Results are automatically saved on the folder associated to each motion
%   capture in variables 'ExperimentalData' and 'InverseKinematicsResults'.
%________________________________________________________
%
% Licence
% Toolbox distributed under GPL 3.0 Licence
%________________________________________________________
%
% Authors : Antoine Muller, Charles Pontonnier, Pierre Puchaud and
% Georges Dumont
%________________________________________________________

disp(['Inverse kinematics (' filename ') ...'])

%% Mvnx loading    
tree = load_mvnx(filename); tree.subject.frames.frame = tree.subject.frames.frame([1:end-1]); %#ok<NBRAK>

%% Experimental data
[~, frame1] = intersect({tree.subject.frames.frame.type},'normal');
freq = tree.subject.frameRate;
ExperimentalData.Time = 0:1/freq:((numel(tree.subject.frames.frame)-frame1)/freq);

%% Joint coordinates
InverseKinematicsResults.JointCoordinates = reshape([tree.subject.frames.frame.jointAngle],66,[]);
InverseKinematicsResults.JointCoordinates = [zeros(1,size(InverseKinematicsResults.JointCoordinates,2));InverseKinematicsResults.JointCoordinates*pi/180];
% L5S1
InverseKinematicsResults.JointCoordinates(2:4,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(4,:); ...
    + InverseKinematicsResults.JointCoordinates(2,:); ...
    + InverseKinematicsResults.JointCoordinates(3,:)];
% L4L3
InverseKinematicsResults.JointCoordinates(5:7,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(7,:); ...
    + InverseKinematicsResults.JointCoordinates(5,:); ...
    + InverseKinematicsResults.JointCoordinates(6,:)];
% L1T12
InverseKinematicsResults.JointCoordinates(8:10,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(10,:); ...
    + InverseKinematicsResults.JointCoordinates(8,:); ...
    + InverseKinematicsResults.JointCoordinates(9,:)];
% T9T8
InverseKinematicsResults.JointCoordinates(11:13,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(13,:); ...
    + InverseKinematicsResults.JointCoordinates(11,:); ...
    + InverseKinematicsResults.JointCoordinates(12,:)];
% T1C7
InverseKinematicsResults.JointCoordinates(14:16,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(16,:); ...
    + InverseKinematicsResults.JointCoordinates(14,:); ...
    + InverseKinematicsResults.JointCoordinates(15,:)];
% C1Head
InverseKinematicsResults.JointCoordinates(17:19,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(19,:); ...
    + InverseKinematicsResults.JointCoordinates(17,:); ...
    + InverseKinematicsResults.JointCoordinates(18,:)];
% Right C7Shoulder
InverseKinematicsResults.JointCoordinates(20:22,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(22,:); ...
    - InverseKinematicsResults.JointCoordinates(20,:); ...
    + InverseKinematicsResults.JointCoordinates(21,:)];
% Right Shoulder
InverseKinematicsResults.JointCoordinates(23:25,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(25,:); ...
    - InverseKinematicsResults.JointCoordinates(23,:); ...
    + InverseKinematicsResults.JointCoordinates(24,:)];
% Right Elbow
InverseKinematicsResults.JointCoordinates(26:28,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(28,:); ...
    - InverseKinematicsResults.JointCoordinates(26,:); ...
    + InverseKinematicsResults.JointCoordinates(27,:)];
% Right Wrist
InverseKinematicsResults.JointCoordinates(29:31,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(31,:); ...
    - InverseKinematicsResults.JointCoordinates(29,:); ...
    + InverseKinematicsResults.JointCoordinates(30,:)];
% Left C7Shoulder
InverseKinematicsResults.JointCoordinates(32:34,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(34,:); ...
    + InverseKinematicsResults.JointCoordinates(32,:); ...
    - InverseKinematicsResults.JointCoordinates(33,:)];
% Left Shoulder
InverseKinematicsResults.JointCoordinates(35:37,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(37,:); ...
    + InverseKinematicsResults.JointCoordinates(35,:); ...
    - InverseKinematicsResults.JointCoordinates(36,:)];
% Left Elbow
InverseKinematicsResults.JointCoordinates(38:40,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(40,:); ...
    + InverseKinematicsResults.JointCoordinates(38,:); ...
    - InverseKinematicsResults.JointCoordinates(39,:)];
% Left Wrist
InverseKinematicsResults.JointCoordinates(41:43,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(43,:); ...
    + InverseKinematicsResults.JointCoordinates(41,:); ...
    - InverseKinematicsResults.JointCoordinates(42,:)];
% Right Hip
InverseKinematicsResults.JointCoordinates(44:46,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(46,:); ...
    - InverseKinematicsResults.JointCoordinates(44,:); ...
    + InverseKinematicsResults.JointCoordinates(45,:)];
% Right Knee
InverseKinematicsResults.JointCoordinates(47:49,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(49,:); ...
    - InverseKinematicsResults.JointCoordinates(47,:); ...
    + InverseKinematicsResults.JointCoordinates(48,:)];
% Right Ankle
InverseKinematicsResults.JointCoordinates(50:52,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(52,:); ...
    - InverseKinematicsResults.JointCoordinates(50,:); ...
    + InverseKinematicsResults.JointCoordinates(51,:)];
% Right BallFoot
InverseKinematicsResults.JointCoordinates(53:55,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(55,:); ...
    - InverseKinematicsResults.JointCoordinates(53,:); ...
    + InverseKinematicsResults.JointCoordinates(54,:)];
% Left Hip
InverseKinematicsResults.JointCoordinates(56:58,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(58,:); ...
    + InverseKinematicsResults.JointCoordinates(56,:); ...
    - InverseKinematicsResults.JointCoordinates(57,:)];
% Left Knee
InverseKinematicsResults.JointCoordinates(59:61,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(61,:); ...
    + InverseKinematicsResults.JointCoordinates(59,:); ...
    - InverseKinematicsResults.JointCoordinates(60,:)];
% Left Ankle
InverseKinematicsResults.JointCoordinates(62:64,:) = ...
    [ - InverseKinematicsResults.JointCoordinates(64,:); ...
    + InverseKinematicsResults.JointCoordinates(62,:); ...
    - InverseKinematicsResults.JointCoordinates(63,:)];
% Left BallFoot
InverseKinematicsResults.JointCoordinates(65:67,:) = ...
    [ + InverseKinematicsResults.JointCoordinates(67,:); ...
    + InverseKinematicsResults.JointCoordinates(65,:); ...
    - InverseKinematicsResults.JointCoordinates(66,:)];

% Pelvis
for i = frame1:size(tree.subject.frames.frame,2)
    InverseKinematicsResults.PelvisPosition{i-frame1+1} = tree.subject.frames.frame(i).position(1,1:3)';
    InverseKinematicsResults.PelvisOrientation{i-frame1+1} = quat2rotm(tree.subject.frames.frame(i).orientation(1:4));
end

%% Position, velocity and acceleration
if isfield(tree.subject.frames.frame, 'position')
    InverseKinematicsResults.SegmentPosition = reshape([tree.subject.frames.frame(frame1:end).position],69,[]);
end
if isfield(tree.subject.frames.frame, 'velocity')
    InverseKinematicsResults.SegmentVelocity = reshape([tree.subject.frames.frame(frame1:end).velocity],69,[]);
end
if isfield(tree.subject.frames.frame, 'acceleration')
    InverseKinematicsResults.SegmentAcceleration = reshape([tree.subject.frames.frame(frame1:end).acceleration],69,[]);
end
if isfield(tree.subject.frames.frame, 'orientation')
    InverseKinematicsResults.SegmentOrientation = reshape([tree.subject.frames.frame(frame1:end).orientation],92,[]);
end
if isfield(tree.subject.frames.frame, 'angularVelocity')
    InverseKinematicsResults.SegmentAngularVelocity = reshape([tree.subject.frames.frame(frame1:end).angularVelocity],69,[]);
end
if isfield(tree.subject.frames.frame, 'angularAcceleration')
    InverseKinematicsResults.SegmentAngularAcceleration = reshape([tree.subject.frames.frame(frame1:end).angularAcceleration],69,[]);
end

%% Filtering
if AnalysisParameters.General.FilterActive
    PelvisPosition = zeros(3,numel(InverseKinematicsResults.PelvisPosition)); PelvisOrientation = zeros(9,numel(InverseKinematicsResults.PelvisPosition));
    f_filt = AnalysisParameters.General.FilterCutOff;
    InverseKinematicsResults.JointCoordinates = filt_data(InverseKinematicsResults.JointCoordinates',f_filt,1/ExperimentalData.Time(2))';
    for i = 1:numel(InverseKinematicsResults.PelvisPosition)
        PelvisPosition(:,i) = InverseKinematicsResults.PelvisPosition{i};
        PelvisOrientation(:,i) = [InverseKinematicsResults.PelvisOrientation{i}(:,1);InverseKinematicsResults.PelvisOrientation{i}(:,2);InverseKinematicsResults.PelvisOrientation{i}(:,3)]; %#ok<SAGROW>
    end
    FiltPelvisPosition = filt_data(PelvisPosition',f_filt,1/ExperimentalData.Time(2))';
    FiltPelvisOrientation = filt_data(PelvisOrientation',f_filt,1/ExperimentalData.Time(2))';
    for i = 1:numel(InverseKinematicsResults.PelvisPosition)
        InverseKinematicsResults.PelvisPosition{i} = FiltPelvisPosition(:,i);
        InverseKinematicsResults.PelvisOrientation{i} = [FiltPelvisOrientation(1:3,i) FiltPelvisOrientation(4:6,i) FiltPelvisOrientation(7:9,i)];
    end
end

%% Save data
mkdir(filename);
save([filename '/InverseKinematicsResults'],'InverseKinematicsResults');
save([filename '/ExperimentalData'],'ExperimentalData');

disp(['... Inverse kinematics (' filename ') done'])

end