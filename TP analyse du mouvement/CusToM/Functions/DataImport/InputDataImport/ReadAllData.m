function [real_markers, nb_frame, Firstframe, Lastframe, f, list_missing_markers_in_c3d]=ReadAllData(~, list_markers, varargin)
% Extraction of experimental data coming from Optotrak
%   
%   INPUT
%   - filename: name of the file to process (character string)
%   - list_markers: list of the marker names
%   OUTPUT
%   - real_markers: 3D position of experimental markers
%   - nb_frame: number of frames
%   - Firstframe: number of the first frame
%   - Lastframe: number of the last frame
%   - f: acquisition frequency
%   - list_missing_markers_in_c3d: list of marker name which are missing in
%   the c3d file

num_essai = 3;

load('AllData.mat'); %#ok<LOAD>

nb_frame = size(Segment(1).PA2G{1,num_essai},1); %#ok<NODEF>
f = 30;

markers = {...
    'MC2G';...
    'MC5G';...
    'PIN_G';...
    'PEX_G';...
    'EPI_G';...
    'EPE_G';...
    'VERTEX';...
    'NEZ';...
    'EAR_G';...
    'MC2D';...
    'MC5D';...
    'PIN_D';...
    'PEX_D';...
    'EPI_D';...
    'EPE_D';...
    'Manubrium';...
    'STRN';...
    'C7';...
    'T8';...
    'EAR_D';...
    'EIASD';...
    'EIASG';...
    'EIPSD';...
    'EIPSG';...
    'L5';...
    'BP__D';...
    'RANI';...
    'RANE';...
    'RKNI';...
    'RKNE';...
    'BP__G';...
    'LANI';...
    'LANE';...
    'LKNI';...
    'LKNE';...
    };

Segment(5).PA2G{1,num_essai} = Segment(5).PA2G{1,num_essai}(:,4:6); % only 1 marker for shoulder
Segment(10).PA2G{1,num_essai} = Segment(10).PA2G{1,num_essai}(:,4:6); % only 1 marker for shoulder 
cpt = 0;

Firstframe = 1;
Lastframe = nb_frame;
for i=1:numel(Segment)
    for j=1:(size(Segment(i).PA2G{1,num_essai},2)/3)
        cpt = cpt + 1;
        markers_pos{cpt} = Segment(i).PA2G{1,num_essai}(:,(j-1)*3+1:j*3)/1000; %#ok<AGROW>
        for k = 1:3
            Firstframe = max(Firstframe, find(~isnan(markers_pos{cpt}(:,k)),1,'first'));
            Lastframe = min(Lastframe, find(~isnan(markers_pos{cpt}(:,k)),1,'last'));
        end
    end
end

Firstframe = 26027;
Lastframe = 27434;

for i=1:numel(markers_pos)
    for j=1:3
%         markers_pos_withoutNaN{i}(:,j) = inpaint_nans(markers_pos{i}(Firstframe:Lastframe,j)); %#ok<AGROW>
        markers_pos_withoutNaN{i}(:,j) = markers_pos{i}(Firstframe:Lastframe,j); %#ok<AGROW>
    end
end
nb_frame = size(markers_pos_withoutNaN{1},1);

[~,b,c] = intersect(list_markers, markers);
[~,ord] = sort(b);
c = c(ord);
real_markers=struct;

for i=1:numel(list_markers)
    real_markers(i).name = markers{c(i)};
    real_markers(i).position_c3d = markers_pos_withoutNaN{c(i)};
end

%Création du vecteur temps
for i=1:numel(real_markers)
    real_markers(i).time=[0:(1/f):(nb_frame-1)/f]'; %#ok<NBRAK>
end

end
